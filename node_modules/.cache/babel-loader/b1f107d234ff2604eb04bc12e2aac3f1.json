{"ast":null,"code":"// api/axiosClient.js\nimport axios from \"axios\";\nimport queryString from \"query-string\";\n// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#requestconfig` for the full list of configs\nconst axiosClient = axios.create({\n  baseURL: \"http://localhost:5000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    credentials: \"include\"\n  },\n  paramsSerializer: params => queryString.stringify(params)\n});\naxiosClient.interceptors.request.use(async config => {\n  // Handle token here ...\n  return config;\n});\naxiosClient.interceptors.response.use(response => {\n  if (response && response.data) {\n    return response.data;\n  }\n  return response;\n}, error => {\n  // Handle errors\n  throw error;\n});\nexport default axiosClient;","map":{"version":3,"names":["axios","queryString","axiosClient","create","baseURL","headers","credentials","paramsSerializer","params","stringify","interceptors","request","use","config","response","data","error"],"sources":["E:/NJS301x_1.0/assignment/asm-njs-03/client/src/API/axiosClient.jsx"],"sourcesContent":["// api/axiosClient.js\nimport axios from \"axios\";\nimport queryString from \"query-string\";\n// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#requestconfig` for the full list of configs\nconst axiosClient = axios.create({\n   baseURL: \"http://localhost:5000\",\n\n   headers: {\n      \"Content-Type\": \"application/json\",\n      credentials: \"include\",\n   },\n   paramsSerializer: (params) => queryString.stringify(params),\n});\naxiosClient.interceptors.request.use(async (config) => {\n   // Handle token here ...\n   return config;\n});\naxiosClient.interceptors.response.use(\n   (response) => {\n      if (response && response.data) {\n         return response.data;\n      }\n      return response;\n   },\n   (error) => {\n      // Handle errors\n      throw error;\n   }\n);\nexport default axiosClient;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,cAAc;AACtC;AACA;AACA,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAE,uBAAuB;EAEhCC,OAAO,EAAE;IACN,cAAc,EAAE,kBAAkB;IAClCC,WAAW,EAAE;EAChB,CAAC;EACDC,gBAAgB,EAAGC,MAAM,IAAKP,WAAW,CAACQ,SAAS,CAACD,MAAM;AAC7D,CAAC,CAAC;AACFN,WAAW,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACpD;EACA,OAAOA,MAAM;AAChB,CAAC,CAAC;AACFX,WAAW,CAACQ,YAAY,CAACI,QAAQ,CAACF,GAAG,CACjCE,QAAQ,IAAK;EACX,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE;IAC5B,OAAOD,QAAQ,CAACC,IAAI;EACvB;EACA,OAAOD,QAAQ;AAClB,CAAC,EACAE,KAAK,IAAK;EACR;EACA,MAAMA,KAAK;AACd,CACH,CAAC;AACD,eAAed,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}